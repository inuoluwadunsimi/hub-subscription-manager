openapi: 3.0.0
info:
  title: Opolo hub subscription manager
  version: 1.0.0
  description: Api docs for managing subscriptions for opolo hub
paths:
  /user/auth/google-auth:
    post:
      summary: 'endpoint for google auth'
      tags:
        - Authentication
      operationId: AuthWithGoogle
      parameters:
        - $ref: '#/components/parameters/DeviceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAuthSchema'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        400:
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/add-user:
    post:
      summary: 'endpoint to add a new user'
      tags:
        - Authentication
        - Admin
      operationId: addUser
      parameters:
        - $ref: '#/components/parameters/AuthToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAddUser'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        400:
          description: 'Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/auth/signup:
    post:
      summary: 'endpoint for user to signup with email'
      tags:
        - Authentication
        - User
      operationId: signUpWithEmail
      parameters:
        - $ref: '#/components/parameters/DeviceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        200:
          description: 'successfully sgined up'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        400:
          description: 'error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/auth/login:
    post:
      tags:
        - Authentication
        - User
      operationId: Login
      summary: 'logs in user'
      parameters:
        - $ref: '#/components/parameters/DeviceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: ' Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        400:
          description: 'error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user/auth/verify-device:
    post:
      tags:
        - Authentication
        - User
      operationId: verifyID
      parameters:
        - $ref: '#/components/parameters/DeviceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyDeviceID'
      responses:
        200:
          description: 'success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        400:
          description: 'error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/auth/change-password:
    post:
      summary: 'endpoint to change user password'
      tags:
        - User
        - Authentication
      operationId: changePassword
      parameters:
        - $ref: '#/components/parameters/AuthToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
        400:
          description: 'error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'












components:
  parameters:
    DeviceID:
      name: x-device-id
      in: header
      schema:
        type: string
      required: true
    AuthToken:
      name: x-auth-token
      in: header
      schema:
        type: string
      required: true
  schemas:
    GoogleAuthSchema:
      type: object
      properties:
        email:
          type: string
        googleToken:
          type: string
        role:
          type: string
          enum:
            - user
            - admin
    TokenResponse:
      title: TokenResponse
      type: object
      properties:
        token:
          type: string

    ErrorResponse:
      title: DefaultResponse
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - message

    DefaultResponse:
      title: DefaultResponse
      type: object
      properties:
        message:
          type: string
      required:
        - message

    AdminAddUser:
      type: object
      properties:
        email:
          type: string
          format: email

    SignupRequest:
      type: object
      required:
        - email
        - fullName
        - password
      properties:
        email:
          type: string
          format: email
        fullName:
          type: string
        password:
          type: string
          format: password
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$'

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          type: object

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string


    VerifyDeviceID:
      type: object
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
        trustDevice:
          type: boolean

    ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
          format: password
        newPassword:
          type: string
          format: password
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$'


